apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.mapbox.mapboxsdk.testapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        checkAllWarnings true
        warningsAsErrors true
        disable 'MissingTranslation'
        disable 'IconDensities'
        disable 'InvalidPackage'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        maxProcessCount 8
        javaMaxHeapSize "2g"
        preDexLibraries true
    }
}

dependencies {
    compile(project(':MapboxGLAndroidSDK')) {
        transitive = true
    }

    // Support libraries
    compile rootProject.ext.dep.supportAppcompatV7
    compile rootProject.ext.dep.supportRecyclerView

    // Leak Canary
    debugCompile rootProject.ext.dep.leakCanaryDebug
    releaseCompile rootProject.ext.dep.leakCanaryRelease
    testCompile rootProject.ext.dep.leakCanaryTest

    // Mapbox Android Services (Java component)
    compile(rootProject.ext.dep.mapboxJavaServices) {
        transitive = true
    }

    // Testing dependencies
    testCompile rootProject.ext.dep.junit
    testCompile rootProject.ext.dep.mockito
    androidTestCompile rootProject.ext.dep.testSpoonRunner
    androidTestCompile rootProject.ext.dep.supportAnnotations
    androidTestCompile rootProject.ext.dep.testRunner
    androidTestCompile rootProject.ext.dep.testRules
    androidTestCompile rootProject.ext.dep.testEspressoCore
    androidTestCompile rootProject.ext.dep.testEspressoIntents
}

apply from: 'gradle-make.gradle'
apply from: 'gradle-config.gradle'
apply from: 'gradle-device-farm.gradle'
apply from: 'gradle-spoon.gradle'
apply from: 'gradle-checkstyle.gradle'


