<%
  const properties = locals.properties;
-%>
// This file is generated. Edit android/platform/scripts/generate-style-code.js, then run `make android-style-code`.
#pragma once

#include "types_string_values.hpp"
#include "../../conversion/conversion.hpp"
#include "../../conversion/constant.hpp"

#include <mbgl/style/types.hpp>
#include <mbgl/util/optional.hpp>
#include <jni/jni.hpp>

#include <string>

namespace mbgl {
namespace android {
namespace conversion {

template <>
struct Converter<jni::jobject*, mbgl::style::VisibilityType> {
    Result<jni::jobject*> operator()(jni::JNIEnv& env, const mbgl::style::VisibilityType& value) const {
        return convert<jni::jobject*, std::string>(env, toString(value));
    }
};

<% for (const property of properties) { -%>
template <>
struct Converter<jni::jobject*, mbgl::style::<%- propertyNativeType(property) %>> {
    Result<jni::jobject*> operator()(jni::JNIEnv& env, const mbgl::style::<%- propertyNativeType(property) %>& value) const {
        return convert<jni::jobject*, std::string>(env, toString(value));
    }
};

<% } -%>

} // namespace conversion
} // namespace android
} // namespace mbgl