// This file is generated.
// Edit platform/darwin/scripts/generate-style-code.js, then run `make style-code-darwin`.

<%
const types = locals.types;
const layoutProperties = locals.layoutProperties;
const paintProperties = locals.paintProperties;
-%>
#import <Foundation/Foundation.h>

<% if (types) { -%>
<% for (const type of types) { -%>
#import "MGL<%- camelize(type) %>StyleLayer.h"
<% } -%>
<% } -%>

NS_ASSUME_NONNULL_BEGIN

/**
 Methods for round-tripping values for Mapbox style layer enumeration values.
*/
@interface NSValue (MGLStyleEnumAttributeAdditions)

#pragma mark Working with Style Layer Enumeration Attribute Values

<% if (layoutProperties.length) { -%>
<% for (const property of layoutProperties) { -%>
<% if (property.type == "enum") { -%>
/**
 Creates a new value object containing the given `MGL<%- camelize(property.name) %>` enumeration.

 @param type The value for the new object.
 @return A new value object that contains the style enumeration type.
*/
+ (instancetype)valueWithMGL<%- camelize(property.name) %>:(MGL<%- camelize(property.name) %>)<%- objCName(property) %>;

/**
 The `MGL<%- camelize(property.name) %>` enumeration representation of the value.
*/
@property (readonly) MGL<%- camelize(property.name) %> <%- objCName(property) %>;

<% } -%>
<% } -%>
<% } -%>
<% if (paintProperties.length) { -%>
<% for (const property of paintProperties) { -%>
<% if (property.type == "enum") { -%>
/**
 Creates a new value object containing the given `MGL<%- camelize(property.name) %>` structure.

 @param type The value for the new object.
 @return A new value object that contains the style enumeration type.
*/
+ (instancetype)valueWithMGL<%- camelize(property.name) %>:(MGL<%- camelize(property.name) %>)<%- objCName(property) %>;

/**
 The `MGL<%- camelize(property.name) %>` enumeration representation of the value.
*/
@property (readonly) MGL<%- camelize(property.name) %> <%- objCName(property) %>;

<% } -%>
<% } -%>
<% } -%>
@end

NS_ASSUME_NONNULL_END
