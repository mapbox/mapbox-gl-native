// NOTE: DO NOT CHANGE THIS FILE. IT IS AUTOMATICALLY GENERATED.

#include <mbgl/shaders/hillshade_prepare.hpp>
#include <mbgl/util/compression.hpp>

#include <cstdint>

namespace mbgl {
namespace shaders {

const char* hillshade_prepare::name = "hillshade_prepare";
const char* hillshade_prepare::vertexSource = [] () {
    static const uint8_t compressed[] = {
        0x78, 0xda, 0x65, 0x4d, 0x51, 0x0a, 0xc2, 0x30,
        0x14, 0xfb, 0xef, 0x29, 0xf2, 0xb9, 0xe9, 0x98,
        0x5b, 0x99, 0xa0, 0x14, 0xef, 0xe0, 0x0d, 0x46,
        0xd5, 0x3a, 0x1e, 0xb8, 0x76, 0x74, 0xed, 0x98,
        0x88, 0x77, 0xf7, 0xd9, 0xa1, 0x20, 0xbe, 0x9f,
        0x84, 0x24, 0x2f, 0x89, 0x96, 0xae, 0xce, 0xf7,
        0xe8, 0x75, 0x68, 0x10, 0x5b, 0x06, 0x4f, 0xb3,
        0x12, 0x42, 0x07, 0x26, 0xa7, 0x18, 0x0c, 0x26,
        0x73, 0x96, 0xd0, 0xed, 0xe0, 0x46, 0xf5, 0xaf,
        0x06, 0x33, 0x87, 0xe8, 0xcd, 0xe2, 0x8a, 0x49,
        0xfb, 0x3b, 0xd9, 0x6e, 0x31, 0xa7, 0x8f, 0xe8,
        0xe8, 0xc2, 0xf5, 0x64, 0xb3, 0x1c, 0x0f, 0x01,
        0xbe, 0xee, 0xd6, 0x1e, 0xdd, 0x48, 0x81, 0x9c,
        0xc5, 0xe1, 0x3b, 0x8a, 0xd5, 0xfb, 0xaf, 0xc9,
        0xd2, 0x54, 0x81, 0xaa, 0x40, 0x9d, 0xab, 0x94,
        0x4f, 0x4d, 0x9c, 0xcc, 0x7e, 0xf6, 0xb0, 0xc1,
        0xae, 0xde, 0xcb, 0xb2, 0xca, 0x99, 0x31, 0x60,
        0x8d, 0xaa, 0x94, 0x5b, 0x25, 0x9e, 0xe2, 0x05,
        0x6f, 0x64, 0x43, 0x2f
    };
    static std::string decompressed = util::decompress(std::string(reinterpret_cast<const char*>(compressed), sizeof(compressed)));
    return decompressed.c_str();
}();
const char* hillshade_prepare::fragmentSource = [] () {
    static const uint8_t compressed[] = {
        0x78, 0xda, 0xad, 0x56, 0x6d, 0x6f, 0xdb, 0x36,
        0x10, 0xfe, 0xee, 0x5f, 0x71, 0x40, 0x3e, 0x4c,
        0x5e, 0x1c, 0x59, 0x56, 0xad, 0xbc, 0x2e, 0x18,
        0x86, 0x24, 0xdd, 0x06, 0x0c, 0xeb, 0x90, 0x0e,
        0xdb, 0x47, 0x83, 0x12, 0x4f, 0x12, 0x17, 0x4a,
        0x54, 0x49, 0xc9, 0x2f, 0xdd, 0xfa, 0xdf, 0x77,
        0xa4, 0x28, 0x2b, 0x69, 0xbc, 0x34, 0x05, 0x26,
        0xe0, 0x20, 0xfb, 0x78, 0xf7, 0xdc, 0x2b, 0xef,
        0x74, 0x24, 0x72, 0x8e, 0x39, 0xfc, 0xf8, 0xcb,
        0xea, 0xee, 0xfd, 0xa4, 0xd1, 0x98, 0x09, 0x23,
        0x54, 0x0d, 0xa5, 0x28, 0xca, 0x06, 0x72, 0xa9,
        0x58, 0x7b, 0x35, 0x39, 0xc2, 0x9a, 0x8b, 0x7c,
        0x32, 0xe9, 0x6a, 0x91, 0x2b, 0x5d, 0x81, 0x61,
        0x55, 0x23, 0x51, 0xc7, 0xb7, 0xd0, 0xad, 0x44,
        0xc5, 0x0a, 0xbc, 0x9a, 0xac, 0x99, 0xde, 0x89,
        0xba, 0x80, 0x35, 0x66, 0x31, 0xac, 0x57, 0x8d,
        0x32, 0x57, 0x7b, 0x71, 0xc7, 0xeb, 0x56, 0x5c,
        0x54, 0x58, 0x5b, 0xf0, 0xf1, 0xc4, 0xe1, 0xd3,
        0xd1, 0x47, 0xa5, 0xaa, 0xe7, 0xdc, 0x8a, 0x6d,
        0xfb, 0x83, 0x49, 0xcf, 0x29, 0xb0, 0xbd, 0x93,
        0xb8, 0x66, 0x2d, 0x61, 0x04, 0x0e, 0x34, 0x53,
        0x4a, 0xf3, 0x99, 0x57, 0x48, 0x05, 0x33, 0x53,
        0xf8, 0x7b, 0x02, 0xf4, 0xcc, 0xe7, 0x70, 0xa3,
        0xea, 0x35, 0xea, 0x16, 0xb0, 0xce, 0x14, 0x47,
        0x0e, 0x38, 0xa8, 0xc2, 0x9a, 0xc9, 0x0e, 0xa1,
        0x55, 0x50, 0x61, 0x8b, 0xda, 0x38, 0x05, 0x82,
        0x5b, 0x02, 0x67, 0x2d, 0x83, 0x6b, 0x68, 0x71,
        0xdb, 0x76, 0x1a, 0xe3, 0xdb, 0xc0, 0x87, 0x37,
        0xeb, 0x0d, 0x4d, 0xe1, 0x5b, 0x88, 0x93, 0x24,
        0x8c, 0xae, 0x9c, 0x8a, 0x46, 0x92, 0xaa, 0x21,
        0xb0, 0x5a, 0xa1, 0x86, 0x63, 0xa7, 0x1e, 0x16,
        0x4e, 0xe8, 0x34, 0x8c, 0x06, 0x46, 0xba, 0x67,
        0xf8, 0xf7, 0x14, 0xe6, 0xb0, 0xb4, 0x20, 0x9f,
        0x26, 0x93, 0xb5, 0x12, 0x1c, 0x2a, 0x26, 0xea,
        0x60, 0xf0, 0xdc, 0xc5, 0x85, 0x8d, 0x11, 0x92,
        0x3c, 0xbd, 0x86, 0x05, 0xe9, 0xcd, 0x9f, 0x26,
        0x6f, 0x08, 0xf0, 0x43, 0x87, 0x5a, 0x50, 0x60,
        0x8d, 0xd8, 0xa2, 0x34, 0x97, 0x03, 0xfb, 0xf8,
        0x64, 0x7c, 0x8e, 0x07, 0xe6, 0x3f, 0xf4, 0xda,
        0xd3, 0xc8, 0x64, 0x44, 0x29, 0x51, 0xf6, 0x98,
        0x79, 0x40, 0xf2, 0x6b, 0x30, 0x39, 0x11, 0x12,
        0xe5, 0xff, 0x23, 0x66, 0x41, 0x54, 0x12, 0x89,
        0xaf, 0xc2, 0x74, 0xdc, 0xbe, 0x37, 0x6c, 0x59,
        0x9f, 0xb6, 0x8f, 0x6d, 0x51, 0x2a, 0x91, 0x4d,
        0x77, 0x70, 0xe2, 0xf3, 0x1d, 0x6e, 0x67, 0xb0,
        0xff, 0xbd, 0x9b, 0xce, 0x20, 0xa2, 0x6a, 0x5d,
        0x3d, 0x82, 0x49, 0x5f, 0x84, 0x89, 0xbe, 0xa0,
        0x9d, 0xbd, 0xa8, 0xfd, 0x5a, 0x1f, 0xf8, 0xab,
        0x43, 0x89, 0x0e, 0x68, 0xe3, 0x41, 0xed, 0xe7,
        0x72, 0xf9, 0x6b, 0x7d, 0x3d, 0x64, 0xa4, 0x78,
        0xb5, 0x8b, 0x2f, 0x05, 0x5a, 0x7e, 0x29, 0xd9,
        0x2f, 0x29, 0x8b, 0xd7, 0xfa, 0xff, 0x1c, 0x64,
        0x68, 0xa6, 0x12, 0x35, 0xc2, 0x06, 0x81, 0x8b,
        0xb5, 0xe0, 0x34, 0x2f, 0x4a, 0x84, 0x2d, 0xb0,
        0x9a, 0xc3, 0x0e, 0x8c, 0x54, 0x0d, 0x1a, 0x48,
        0x77, 0x70, 0x4e, 0xb7, 0xda, 0x5d, 0x40, 0x30,
        0xe2, 0x23, 0x0e, 0xaa, 0x1b, 0xa7, 0x3b, 0xf2,
        0x21, 0x60, 0x0f, 0xcc, 0x8f, 0x9b, 0xb9, 0x63,
        0x4f, 0x41, 0x8c, 0x57, 0x36, 0x13, 0x3a, 0xeb,
        0xaa, 0x9c, 0x74, 0xea, 0x0c, 0x41, 0xe5, 0xce,
        0xd6, 0x46, 0x69, 0xc9, 0xe9, 0xee, 0x07, 0xfd,
        0xfd, 0x86, 0x06, 0x35, 0xb4, 0x42, 0x22, 0x19,
        0xac, 0xbb, 0x2a, 0xa5, 0x7f, 0x56, 0x90, 0x18,
        0x66, 0x3a, 0x9a, 0x15, 0x59, 0x49, 0xc0, 0x80,
        0x1f, 0x3a, 0x41, 0x53, 0x0e, 0xeb, 0x96, 0xc6,
        0xdc, 0xa5, 0x73, 0x72, 0x19, 0x45, 0x67, 0x49,
        0xb4, 0x38, 0x0d, 0x4f, 0xcf, 0x93, 0xe4, 0xec,
        0x3c, 0xb1, 0xc8, 0xc9, 0x22, 0xb6, 0xee, 0xab,
        0x4d, 0x10, 0xcf, 0xfc, 0x14, 0x9e, 0x7e, 0x06,
        0x96, 0xb1, 0x1a, 0x52, 0xa4, 0x59, 0xc7, 0xbb,
        0x8c, 0x66, 0x8d, 0x45, 0xf3, 0xf2, 0x8b, 0x8b,
        0x90, 0xc6, 0xd9, 0xe2, 0xe2, 0x82, 0xc0, 0xe2,
        0x33, 0x38, 0x19, 0x00, 0xf6, 0xfa, 0x14, 0x02,
        0x73, 0x0e, 0x80, 0x9d, 0xc3, 0x22, 0x63, 0x52,
        0xee, 0x00, 0xb7, 0xac, 0x28, 0x50, 0xb3, 0xb6,
        0x4f, 0x68, 0x29, 0xa4, 0x34, 0x25, 0xe3, 0x76,
        0x75, 0xb4, 0xa5, 0xea, 0x8a, 0x72, 0x46, 0xe6,
        0x32, 0xd6, 0x19, 0xca, 0x03, 0x09, 0xe8, 0x8d,
        0x30, 0xfb, 0xac, 0x8a, 0xd6, 0xc6, 0x96, 0x32,
        0x8d, 0x04, 0x54, 0x2b, 0x82, 0x44, 0x96, 0x52,
        0x42, 0xa8, 0xdc, 0x52, 0x6d, 0xc0, 0x5a, 0x37,
        0xa1, 0xb5, 0xc7, 0x15, 0x81, 0x09, 0xea, 0x6a,
        0xf2, 0xa1, 0xea, 0x64, 0x2b, 0x1a, 0x52, 0xb0,
        0x1c, 0x5b, 0x31, 0xa3, 0xaa, 0x3d, 0xa2, 0x21,
        0xa7, 0x10, 0x72, 0x96, 0xb5, 0x4a, 0x0f, 0x71,
        0x05, 0x7d, 0x1c, 0x2e, 0x20, 0xbf, 0x81, 0xec,
        0xe0, 0x67, 0x53, 0x5f, 0x55, 0x66, 0x9d, 0xa0,
        0xac, 0x30, 0x9d, 0x8a, 0x56, 0xd3, 0xda, 0xeb,
        0xf7, 0xc9, 0x00, 0xf9, 0x93, 0xef, 0x1a, 0x1b,
        0x01, 0xbb, 0x8e, 0xc2, 0x37, 0x3e, 0x91, 0x54,
        0xce, 0x07, 0x03, 0xaa, 0x73, 0x09, 0xb1, 0xa1,
        0xe3, 0x96, 0xb6, 0xad, 0x71, 0xcb, 0x36, 0x45,
        0xf2, 0x3f, 0x04, 0x83, 0x08, 0x03, 0x4c, 0x2d,
        0xb2, 0x07, 0xc1, 0x65, 0x57, 0x30, 0x53, 0x7e,
        0x43, 0xf6, 0x36, 0x68, 0xfd, 0x86, 0x54, 0x23,
        0x7b, 0xe0, 0x6a, 0x53, 0x03, 0x6d, 0x4a, 0xa8,
        0x14, 0xd9, 0x12, 0x75, 0xae, 0xf6, 0x2d, 0xdb,
        0xb6, 0x8d, 0xb9, 0x9c, 0xcf, 0x0b, 0xd1, 0x96,
        0x5d, 0x1a, 0x66, 0xaa, 0x9a, 0x57, 0xac, 0x49,
        0xd5, 0xd6, 0xbf, 0x4e, 0x0a, 0x79, 0xf2, 0x17,
        0x75, 0x60, 0x27, 0xe5, 0x3c, 0x89, 0xcf, 0x4f,
        0x8f, 0xb8, 0x30, 0x59, 0xe7, 0x9c, 0x58, 0xe9,
        0xc5, 0xf2, 0x7c, 0xb9, 0xb8, 0x48, 0x92, 0xd3,
        0xc7, 0xe3, 0x62, 0x28, 0x97, 0x70, 0xdb, 0xc8,
        0xa7, 0xe6, 0x3b, 0x88, 0x69, 0x2d, 0x7d, 0x4f,
        0xf7, 0x65, 0x09, 0x97, 0x23, 0x73, 0x19, 0x26,
        0x8e, 0xf9, 0x26, 0x21, 0x2e, 0xbd, 0xfc, 0x55,
        0x72, 0x1b, 0x8d, 0xd3, 0xae, 0x5a, 0x13, 0x82,
        0xbb, 0x7e, 0x8e, 0x6d, 0x9f, 0x20, 0xa3, 0x1b,
        0x99, 0x7b, 0x12, 0x53, 0xca, 0x79, 0xc0, 0xec,
        0xde, 0xf4, 0x54, 0x4c, 0x67, 0xa3, 0x68, 0x41,
        0x8c, 0xd2, 0xd3, 0x28, 0x9a, 0x7a, 0xca, 0xfa,
        0xbe, 0xb3, 0xbb, 0xb5, 0x2f, 0x64, 0x18, 0xfd,
        0x67, 0x29, 0x9f, 0x04, 0x75, 0xec, 0x1b, 0x39,
        0x1e, 0x3b, 0xd8, 0xfb, 0x5d, 0xc8, 0xd5, 0x5b,
        0xcd, 0x8a, 0x1b, 0x25, 0x29, 0xd5, 0xd7, 0x90,
        0x49, 0xfa, 0xea, 0xb1, 0x9f, 0x1d, 0xcb, 0xd1,
        0x7f, 0x17, 0x55, 0xb8, 0x25, 0xa3, 0xb1, 0x5b,
        0xf8, 0x51, 0x98, 0xcc, 0x3e, 0x3b, 0xdc, 0x1d,
        0x3e, 0xa4, 0xbd, 0xfe, 0xe4, 0x4f, 0x3f, 0x7d,
        0x66, 0xee, 0x27, 0xd9, 0x3f, 0xea, 0xbf, 0xca,
        0xde, 0xfd, 0x71, 0x77, 0x7f, 0x7b, 0xff, 0xc3,
        0x9f, 0xab, 0x9f, 0x7f, 0x7d, 0xff, 0xdb, 0xdd,
        0xcd, 0xef, 0xef, 0xee, 0x0f, 0x79, 0xe6, 0x7c,
        0xea, 0x15, 0xfd, 0x97, 0xda, 0xa7, 0xc9, 0xbf,
        0xfe, 0xd0, 0xd7, 0x60
    };
    static std::string decompressed = util::decompress(std::string(reinterpret_cast<const char*>(compressed), sizeof(compressed)));
    return decompressed.c_str();
}();

} // namespace shaders
} // namespace mbgl
