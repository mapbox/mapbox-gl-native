// NOTE: DO NOT CHANGE THIS FILE. IT IS AUTOMATICALLY GENERATED.

#include <mbgl/shaders/background.hpp>
#include <mbgl/util/compression.hpp>

#include <cstdint>

namespace mbgl {
namespace shaders {

const char* background::name = "background";
const char* background::vertexSource = [] () {
    static const uint8_t compressed[] = {
        0x78, 0xda, 0x4b, 0x2c, 0x29, 0x29, 0xca, 0x4c,
        0x2a, 0x2d, 0x49, 0x55, 0x28, 0x4b, 0x4d, 0x36,
        0x52, 0x48, 0x8c, 0x2f, 0xc8, 0x2f, 0xb6, 0xe6,
        0xe2, 0x2a, 0xcd, 0xcb, 0x4c, 0xcb, 0x2f, 0xca,
        0x55, 0xc8, 0x4d, 0x2c, 0x31, 0x51, 0x28, 0x8d,
        0x07, 0x52, 0x45, 0x99, 0x15, 0x40, 0xf1, 0xb2,
        0xfc, 0xcc, 0x14, 0xa0, 0x60, 0x66, 0x9e, 0x86,
        0xa6, 0x42, 0x35, 0x97, 0x02, 0x10, 0xa4, 0xe7,
        0xc4, 0x07, 0xe4, 0x17, 0x67, 0x96, 0x64, 0xe6,
        0xe7, 0x29, 0xd8, 0xc2, 0x95, 0x2a, 0x68, 0x81,
        0xcc, 0x33, 0xd1, 0x00, 0x9b, 0xa7, 0xa3, 0x60,
        0xa0, 0xa3, 0x60, 0xa8, 0x69, 0xcd, 0x55, 0xcb,
        0x05, 0x00, 0x45, 0x7b, 0x23, 0xb2
    };
    static std::string decompressed = util::decompress(std::string(reinterpret_cast<const char*>(compressed), sizeof(compressed)));
    return decompressed.c_str();
}();
const char* background::fragmentSource = [] () {
    static const uint8_t compressed[] = {
        0x78, 0xda, 0x2b, 0xcd, 0xcb, 0x4c, 0xcb, 0x2f,
        0xca, 0x55, 0x28, 0x4b, 0x4d, 0x36, 0x51, 0x28,
        0x8d, 0x4f, 0xce, 0xcf, 0xc9, 0x2f, 0xb2, 0xe6,
        0x2a, 0x85, 0x8a, 0xa6, 0xe5, 0xe4, 0x27, 0x96,
        0x00, 0x85, 0xf3, 0x0b, 0x12, 0x93, 0x33, 0x4b,
        0x2a, 0xad, 0xb9, 0xb8, 0xca, 0xf2, 0x33, 0x53,
        0x14, 0x72, 0x13, 0x33, 0xf3, 0x34, 0x34, 0x15,
        0xaa, 0xb9, 0x14, 0x80, 0x20, 0x3d, 0x27, 0xde,
        0xad, 0x28, 0x31, 0xdd, 0x19, 0xa4, 0x53, 0xc1,
        0x16, 0x66, 0x86, 0x82, 0x16, 0x8a, 0x36, 0xe5,
        0xcc, 0xb4, 0x94, 0xd4, 0x34, 0x05, 0xff, 0x30,
        0xd7, 0x20, 0x97, 0x20, 0xc7, 0xf0, 0x78, 0x4f,
        0xbf, 0xe0, 0x00, 0x57, 0xe7, 0x10, 0xff, 0x20,
        0x6c, 0x46, 0x80, 0xdc, 0xa2, 0x61, 0xa8, 0x67,
        0xa0, 0x69, 0xcd, 0xa5, 0x9c, 0x9a, 0x97, 0x92,
        0x99, 0xc6, 0x55, 0xcb, 0x05, 0x00, 0xbb, 0x66,
        0x35, 0xbb
    };
    static std::string decompressed = util::decompress(std::string(reinterpret_cast<const char*>(compressed), sizeof(compressed)));
    return decompressed.c_str();
}();

} // namespace shaders
} // namespace mbgl
