// NOTE: DO NOT CHANGE THIS FILE. IT IS AUTOMATICALLY GENERATED.

#include <mbgl/shaders/debug.hpp>
#include <mbgl/util/compression.hpp>

#include <cstdint>

namespace mbgl {
namespace shaders {

const char* debug::name = "debug";
const char* debug::vertexSource = [] () {
    static const uint8_t compressed[] = {
        0x78, 0xda, 0x4b, 0x2c, 0x29, 0x29, 0xca, 0x4c,
        0x2a, 0x2d, 0x49, 0x55, 0x28, 0x4b, 0x4d, 0x36,
        0x52, 0x48, 0x8c, 0x2f, 0xc8, 0x2f, 0xb6, 0xe6,
        0xe2, 0x2a, 0xcd, 0xcb, 0x4c, 0xcb, 0x2f, 0xca,
        0x55, 0xc8, 0x4d, 0x2c, 0x31, 0x51, 0x28, 0x8d,
        0x07, 0x52, 0x45, 0x99, 0x15, 0x40, 0xf1, 0xb2,
        0xfc, 0xcc, 0x14, 0xa0, 0x60, 0x66, 0x9e, 0x86,
        0xa6, 0x42, 0x35, 0x97, 0x02, 0x10, 0xa4, 0xe7,
        0xc4, 0x07, 0xe4, 0x17, 0x67, 0x96, 0x64, 0xe6,
        0xe7, 0x29, 0xd8, 0xc2, 0x95, 0x2a, 0x68, 0x81,
        0xcc, 0x33, 0xd1, 0x00, 0x9b, 0xa7, 0xa3, 0x60,
        0xa0, 0xa3, 0x60, 0xa8, 0x69, 0xcd, 0x55, 0xcb,
        0x05, 0x00, 0x45, 0x7b, 0x23, 0xb2
    };
    static std::string decompressed = util::decompress(std::string(reinterpret_cast<const char*>(compressed), sizeof(compressed)));
    return decompressed.c_str();
}();
const char* debug::fragmentSource = [] () {
    static const uint8_t compressed[] = {
        0x78, 0xda, 0x2b, 0xcd, 0xcb, 0x4c, 0xcb, 0x2f,
        0xca, 0x55, 0xc8, 0xc8, 0x4c, 0xcf, 0x28, 0x50,
        0x28, 0x4b, 0x4d, 0x36, 0x51, 0x28, 0x8d, 0x4f,
        0xce, 0xcf, 0xc9, 0x2f, 0xb2, 0xe6, 0xe2, 0x2a,
        0xcb, 0xcf, 0x4c, 0x51, 0xc8, 0x4d, 0xcc, 0xcc,
        0xd3, 0xd0, 0x54, 0xa8, 0xe6, 0x52, 0x00, 0x82,
        0xf4, 0x9c, 0x78, 0xb7, 0xa2, 0xc4, 0x74, 0x67,
        0x90, 0x02, 0x05, 0x5b, 0x84, 0xd2, 0x5a, 0x2e,
        0x00, 0x9b, 0x4e, 0x17, 0xff
    };
    static std::string decompressed = util::decompress(std::string(reinterpret_cast<const char*>(compressed), sizeof(compressed)));
    return decompressed.c_str();
}();

} // namespace shaders
} // namespace mbgl
